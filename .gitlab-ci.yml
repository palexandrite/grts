stages:
  - build
  - dbupgrade
  - deploy

variables:
    IMGNAMEPROD: "gratus_api_master"
    CONTNAMEPROD: "gratus_api_master"
    URL_APP: "gratus.envionsoftware.com"
    DB_NETWORK: "db"

build-master:
  stage: build
  tags: 
    - hetz
    - web01
  only:
    - master
  script:
    - echo $CI_PROJECT_DIR
    - sed -i "s|DB_HOST=mysql|DB_HOST=db|g" ./.env
    - sed -i "s|APP_URL=http://localhost|APP_URL=https://$URL_APP|g" ./.env
    - sed -i "s|DB_USERNAME=root|DB_USERNAME=gratus|g" ./.env
    - sed -i "s|DB_PASSWORD=gtgratus|DB_PASSWORD=ZyUqDMe3XprYg4y2s|g" ./.env
    - docker build -t $IMGNAMEPROD .

dbupgrade-master:
  stage: dbupgrade
  tags:
    - hetz
    - web01
  only:
    - master
  script:
    - docker container run -i --rm --name ${IMGNAMEPROD}_DB_upgrade --network $DB_NETWORK $IMGNAMEPROD php artisan migrate
    - docker container run -i --rm --name ${IMGNAMEPROD}_DB_upgrade --network $DB_NETWORK $IMGNAMEPROD php artisan db:seed

PmplanAdmin-Deploy-master:
  stage: deploy
  tags:
    - hetz
    - web01
  only:
    - master
  before_script:
    - if [ "$(docker inspect -f '{{.State.Running}}' $CONTNAMEPROD 2>/dev/null)" = "true" ]; then docker rm -f $CONTNAMEPROD;  fi
    - if [ "$(docker inspect -f '{{.State.Status}}' $CONTNAMEPROD 2>/dev/null)" = "exited" ]; then docker rm -f $CONTNAMEPROD;  fi
  script: 
    - docker container run -d -p 8181:8181 --name $CONTNAMEPROD --restart=always --network=$DB_NETWORK $IMGNAMEPROD

